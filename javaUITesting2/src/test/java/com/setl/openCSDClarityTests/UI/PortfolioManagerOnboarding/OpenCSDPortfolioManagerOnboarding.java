package com.setl.openCSDClarityTests.UI.PortfolioManagerOnboarding;import com.setl.UI.common.SETLUIHelpers.LoginAndNavigationHelper;import com.setl.UI.common.SETLUtils.RepeatRule;import com.setl.UI.common.SETLUtils.ScreenshotRule;import com.setl.UI.common.SETLUtils.TestMethodPrinterRule;import custom.junit.runners.OrderedJUnit4ClassRunner;import org.junit.Before;import org.junit.Ignore;import org.junit.Rule;import org.junit.Test;import org.junit.rules.Timeout;import org.junit.runner.RunWith;import org.openqa.selenium.JavascriptExecutor;import java.io.IOException;import java.sql.SQLException;import static SETLAPIHelpers.DatabaseHelper.setDBTwoFAOff;import static com.setl.UI.common.SETLUIHelpers.AdministrationModuleHelper.generateEmail;import static com.setl.UI.common.SETLUIHelpers.AdministrationModuleHelper.generateRandomTeamReference;import static com.setl.UI.common.SETLUIHelpers.AdministrationModuleHelper.generateUser;import static com.setl.UI.common.SETLUIHelpers.FundsDetailsHelper.generateRandomEmail;import static com.setl.UI.common.SETLUIHelpers.KYCDetailsHelper.*;import static com.setl.UI.common.SETLUIHelpers.KYCDetailsHelper.KYCAcceptMostRecentRequest2;import static com.setl.UI.common.SETLUIHelpers.LoginAndNavigationHelper.*;import static com.setl.UI.common.SETLUIHelpers.SetUp.driver;import static com.setl.UI.common.SETLUIHelpers.SetUp.testSetUp;import static com.setl.UI.common.SETLUIHelpers.UserDetailsHelper.generateRandomUserDetails;import static com.setl.openCSDClarityTests.UI.Iznes2KYCModule.OpenCSDKYCModuleAcceptanceTest.*;import static com.setl.openCSDClarityTests.UI.Iznes4General.OpenCSDGeneralAcceptanceTest.inviteAnInvestor;import static com.setl.openCSDClarityTests.UI.Iznes4General.OpenCSDGeneralAcceptanceTest.navigateToInviteInvestorPage;import static org.junit.Assert.fail;@RunWith(OrderedJUnit4ClassRunner.class)public class OpenCSDPortfolioManagerOnboarding {    public static String connectionString = "jdbc:mysql://localhost:9998/setlnet?nullNamePatternMatchesAll=true";    // Defines username and password to connect to database server.    static String username = "root";    static String password = "nahafusi61hucupoju78";    static String testusername = "TestUserNullInfo";    static String testpassword = "Testpass123";    JavascriptExecutor jse = (JavascriptExecutor)driver;    @Rule    public ScreenshotRule screenshotRule = new ScreenshotRule();    @Rule    public RepeatRule repeatRule = new RepeatRule();    @Rule    public Timeout globalTimeout = new Timeout(30000);    @Rule    public TestMethodPrinterRule pr = new TestMethodPrinterRule(System.out);    @Before    public void setUp() throws Exception {        testSetUp();        screenshotRule.setDriver(driver);        setDBTwoFAOff();    }    @Test    public void TG3065_shouldInviteUserWithPortfolioManagerType() throws InterruptedException, SQLException, IOException {        String firstName = "Jordan";String lastName = "Miller";        String AMUsername = "am";String AMPassword = "alex01";        String[] email = generateRandomEmail();        loginAndVerifySuccess(AMUsername, AMPassword);        waitForHomePageToLoad();        navigateToInviteInvestorPage();        inviteAnInvestor(email[0], firstName, lastName, "Success!", "Portfolio Manager");    }    @Test    public void TG3067_shouldAssertCompanyNameEqualsNameOfAssociatedFund() throws Exception {        String managementCompEntered = "Management Company";        String companyName = "Jordan Corporation";        String phoneNo = "07956701992";        String firstName = "Jordan";        String lastName = "Miller";        String AMUsername = "am";        String AMPassword = "alex01";        String INVPassword = "asdASD123";        String[] email = generateRandomEmail();        String uSubIBANDetails = "FR7630006000011234567890189";        loginAndVerifySuccess(AMUsername, AMPassword);        navigateToInviteInvestorPage();        inviteAnInvestor(email[0], firstName, lastName, "Success!", "Portfolio Manager");        logout();        newInvestorSignUp(email[0], INVPassword);        KYCProcessWelcomeToIZNES2(email[0], companyName, phoneNo, firstName, lastName, managementCompEntered);        KYCProcessStep1Alternate(managementCompEntered, "No", "False", "");        KYCProcessStep2();        KYCProcessStep3GeneralInfoComplete(companyName);        KYCProcessStep3CompanyInfoComplete();        KYCProcessStep3BankingInfoComplete(companyName, uSubIBANDetails);        KYCProcessStep4();        KYCProcessStep5();        KYCProcessStep6(firstName + " " + lastName, "SETL Developments LTD", "Ipswich", "Head");        KYCProcessRequestListValidation("Yes","Success!", managementCompEntered, "Waiting Approval", "No", "", "");        Thread.sleep(750);        logout();        KYCAcceptMostRecentRequest2(AMUsername, AMPassword, companyName, firstName, lastName, phoneNo, "accept");    }    @Test    public void TG3068_shouldAssetClientReferentialDataGridInformationPostInvite()throws InterruptedException, SQLException {        System.out.println("Test fulfilled in kyc tests");    }    @Test    //TODO Sprint 14    public void TG3070_shouldAssertRowIsClickableUnderClientReferential()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }    @Test    //TODO Sprint 14    public void TG3070_shouldAssertPageRedirectAndTabLayout()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }    @Test    //TODO Sprint 14    public void TG3063_shouldAssertOnClientReferentialInviteInvestorTypePM()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }    @Test    //TODO Sprint 14    public void TG3064_shouldAssertSelectingPMTypeDisplaysFundListing()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }    @Test    //TODO Sprint 14    public void TG3071_shouldAssertInvitationOnFundListUpdateToPM()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }    @Test    //TODO Sprint 14    public void TG3063_shouldAssertNewInvestorTypeOnInviteScreenPortfolioManager()throws InterruptedException, SQLException {        try {            loginAndVerifySuccess("am", "alex01");            navigateToDropdown("top-menu-my-clients");            navigateToDropdown("top-menu-client-referential");            invitePortfolioManager("Type", "email", "firstName", "lastName", "reference", "language");            assertSendEmailInvitationPopUp();        }catch (Exception e) {            fail("not yet implemented");        }    }    private void assertSendEmailInvitationPopUp() {        /*            Just check that the success pop up is given the user when they have sent the invitation        */    }    private void invitePortfolioManager(String type, String email, String firstName, String lastName, String reference,            String language) {        /*            For this step we want to invite a user type added called Portfolio Manager            Assert the new type is under Investor Type            Assert system allows for the investor to be invited        */    }    @Test    //TODO Sprint 14    public void TG3064_shouldAssertListOfFundsAppearOnSelectingPMType()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }    @Test    //TODO Sprint 14    public void TG3064_shouldAssertInformationInNewFields()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }    @Test    //TODO Sprint 14    public void TG3064_shouldAssertAMMustSelectOneFundFromField()throws InterruptedException, SQLException {        System.out.println("Not Yet Implemented");    }}