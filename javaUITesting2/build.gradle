group 'javaUITesting2'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
compileTestJava {options.encoding = "UTF-8"}

sourceCompatibility = 1.8

buildscript {
    repositories {
        maven { url "http://si-nexus01.dev.setl.io:8081/repository/maven-public/" }
        mavenCentral()
    }
}


ext.junitVersion = '4.12'
ext.seleniumVersion = '3.4.0'

repositories {
    maven { url "http://si-nexus01.dev.setl.io:8081/repository/maven-public/" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.7'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    testCompile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-firefox-driver', version:'3.4.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version:'3.4.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-api', version:'3.4.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:'3.4.0'

    //for OTP
    testCompile "com.google.zxing:core:3.3.0"
    testCompile 'com.google.zxing:javase:3.3.0'
    testCompile  group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version: '1.0.0'

    // https://mvnrepository.com/artifact/joda-time/joda-time
    testCompile group: 'joda-time', name: 'joda-time', version: '2.10.1'

    compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '3.4.0'
    compile group: 'io.setl', name: 'websocket-client',     version: '1.0.15-SNAPSHOT'
    compile group: 'io.setl', name: 'restapi-client',  version: '1.0.15-SNAPSHOT'
    testCompile group: 'io.setl', name: 'restapi-client',  version: '1.0.15-SNAPSHOT'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile 'mysql:mysql-connector-java:6.0.6'
}
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent


tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
            TestLogEvent.PASSED,
            TestLogEvent.SKIPPED,
            TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events TestLogEvent.STARTED,
                TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR,
                TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}



