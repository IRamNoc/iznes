node ('jenkins03'){
    timestamps {
        def build_ok = true
        stage('Establish Tunnel Connection') {
            try {
                sh '''
                ssh -N -L localhost:9998:localhost:3306 root@139.162.213.130 &
                '''
            } catch (err) {
                throw err
            }
        }

        stage('Check Out Tests') {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']],
                      doGenerateSubmoduleConfigurations: false, extensions: [],
                      submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'd2b5fbd5-eb0f-4619-a094-d7d6f7fa249c',
                                                             url: 'git@si-nexus01.dev.setl.io:opencsd-rewrite/opencsd-frontend-clarity.git']]])

        }

        stage('Run Acceptance Tests') {
            try {
                sh  ''' cd ~/workspace/IznesEntireFlowTest/ && rm -f target/test-attachments/*.jpg &&
                        cd ~/workspace/IznesEntireFlowTest/javaUITesting2 
                        export DISPLAY=:10
                        ./gradlew clean test --tests *Iznes1SanityTests*
                    '''
            } catch (err) {
                build_ok = false
                echo err.toString()
            }

            archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/test-attachments/*.jpg'
            junit allowEmptyResults: true, keepLongStdio: true,
                testResults: '***/build/test-results/test/TEST-com.setl.openCSDClarityTests.UI.Iznes1SanityTests**'

            echo 'determining success'
            if (build_ok) {
                currentBuild.result = 'SUCCESS'
            } else {
                currentBuild.result = 'FAILURE'
            }
        }
    }
}
