node {

}

def notifySlack(String buildStatus = 'STARTED') {
    // Build status of null means success.
    buildStatus = buildStatus ?: 'SUCCESS'

    def color

    if (buildStatus == 'STARTED') {
        color = '#0000CD'
    } else if (buildStatus == 'SUCCESS') {
        color = '#008000'
    } else if (buildStatus == 'UNSTABLE') {
        color = '#FFFF00'
    } else {
        color = '#FF0000'
    }
    def msg = "${buildStatus}: `${env.JOB_NAME}` #${env.BUILD_NUMBER}:\n${env.BUILD_URL}"
    slackSend(channel: "ocsd_frontend", color: color, message: msg)
}

timestamps {
    node {
        try {
            notifySlack()
            stage('Establish Tunnel Connection') {
                try{
                    sh '''
                ssh -N -L localhost:9999:localhost:3306 root@139.162.213.130 &
                '''
                }catch (err) {
                    throw err
                }
            }

            stage('Clear down database') {
                        sh 'ssh -tt root@uk-lon-li-006.opencsd.io \'cd setl/db-backup/ && pwd && ls && ./cleanblockchain\''
                    }

            stage('Check Out Tests') {
                checkout([$class                           : 'GitSCM', branches: [[name: '*/master']],
                          doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [],
                          userRemoteConfigs                : [[credentialsId: '294d9ac9-499b-487d-8c4c-ba53c0cb56a7',
                                                               url          : 'git@si-nexus01.dev.setl.io:opencsd-rewrite/opencsd-frontend-clarity.git']]])
            }

            stage('Run Acceptance Tests') {
                try{
                    sh '''rm -f target/test-attachments/*.jpg &&
                    cd ~/workspace/IznesUIAcceptanceTests/javaUITesting2
                    export DISPLAY=:10
                    ./gradlew clean build --debug'''


                } catch (err) {
                    if (currentBuild.result == 'UNSTABLE')
                        currentBuild.result = 'FAILURE'
                    throw err
                } finally {
                    archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/test-attachments/*.jpg'

                    testResults: '**/javaUITesting2/build/test-results/test/TEST-com**'
                    publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'javaUITesting2/build/reports/tests/test',
                                 reportFiles : 'index.html', reportName: 'SETL New OpenCSD Clarity UI Test Report', reportTitles: ''])
                }
            }


        } catch (e) {
            currentBuild.result = 'FAILURE'
            throw e
        } finally {
            notifySlack(currentBuild.result)
        }
    }
}
